{"ast":null,"code":"import React,{useEffect,useContext,Profiler}from\"react\";import history from\"./history\";import Context from\"./context\";import*as ACTIONS from\"../store/actions/actions\";import axios from\"axios\";// Utilize useEffect to update authentication state\nvar AuthCheck=function AuthCheck(){var context=useContext(Context);useEffect(function(){if(context.authObj.isAuthenticated()){// Checkes if access tokens in local storage haven't expired and user is still logged in\nvar profile=context.authObj.userProfile;context.handleUserLogin();context.handleUserAddProfile(profile);axios.post(\"/api/posts/userprofiletodb\",profile).then(axios.get(\"/api/get/userprofilefromdb\",{params:{email:Profiler.profile.email}})).then(function(res){return context.handleAddDBProfile(res.data);}).then(history.replace(\"/\"));}else{context.handleUserLogout();context.handleUserRemoveProfile();history.replace(\"/\");}},[context.authObj.userProfile,context]);return/*#__PURE__*/React.createElement(\"div\",null);};export default AuthCheck;","map":{"version":3,"sources":["/Users/AaronVerdine/Desktop/WEB_DEV/Projects/fso_blog/Client/src/utils/authcheck.js"],"names":["React","useEffect","useContext","Profiler","history","Context","ACTIONS","axios","AuthCheck","context","authObj","isAuthenticated","profile","userProfile","handleUserLogin","handleUserAddProfile","post","then","get","params","email","res","handleAddDBProfile","data","replace","handleUserLogout","handleUserRemoveProfile"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,UAA3B,CAAuCC,QAAvC,KAAuD,OAAvD,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,0BAAzB,CAEA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,GAAMC,CAAAA,OAAO,CAAGP,UAAU,CAACG,OAAD,CAA1B,CAEAJ,SAAS,CAAC,UAAM,CACd,GAAIQ,OAAO,CAACC,OAAR,CAAgBC,eAAhB,EAAJ,CAAuC,CACrC;AACA,GAAMC,CAAAA,OAAO,CAAGH,OAAO,CAACC,OAAR,CAAgBG,WAAhC,CACAJ,OAAO,CAACK,eAAR,GACAL,OAAO,CAACM,oBAAR,CAA6BH,OAA7B,EACAL,KAAK,CACFS,IADH,CACQ,4BADR,CACsCJ,OADtC,EAEGK,IAFH,CAGIV,KAAK,CAACW,GAAN,CAAU,4BAAV,CAAwC,CACtCC,MAAM,CAAE,CAAEC,KAAK,CAAEjB,QAAQ,CAACS,OAAT,CAAiBQ,KAA1B,CAD8B,CAAxC,CAHJ,EAOGH,IAPH,CAOQ,SAACI,GAAD,QAASZ,CAAAA,OAAO,CAACa,kBAAR,CAA2BD,GAAG,CAACE,IAA/B,CAAT,EAPR,EAQGN,IARH,CAQQb,OAAO,CAACoB,OAAR,CAAgB,GAAhB,CARR,EASD,CAdD,IAcO,CACLf,OAAO,CAACgB,gBAAR,GACAhB,OAAO,CAACiB,uBAAR,GACAtB,OAAO,CAACoB,OAAR,CAAgB,GAAhB,EACD,CACF,CApBQ,CAoBN,CAACf,OAAO,CAACC,OAAR,CAAgBG,WAAjB,CAA8BJ,OAA9B,CApBM,CAAT,CAsBA,mBAAO,+BAAP,CACD,CA1BD,CA4BA,cAAeD,CAAAA,SAAf","sourcesContent":["import React, { useEffect, useContext, Profiler } from \"react\";\nimport history from \"./history\";\nimport Context from \"./context\";\nimport * as ACTIONS from \"../store/actions/actions\";\n\nimport axios from \"axios\";\n\n// Utilize useEffect to update authentication state\n\nconst AuthCheck = () => {\n  const context = useContext(Context);\n\n  useEffect(() => {\n    if (context.authObj.isAuthenticated()) {\n      // Checkes if access tokens in local storage haven't expired and user is still logged in\n      const profile = context.authObj.userProfile;\n      context.handleUserLogin();\n      context.handleUserAddProfile(profile);\n      axios\n        .post(\"/api/posts/userprofiletodb\", profile)\n        .then(\n          axios.get(\"/api/get/userprofilefromdb\", {\n            params: { email: Profiler.profile.email },\n          })\n        )\n        .then((res) => context.handleAddDBProfile(res.data))\n        .then(history.replace(\"/\"));\n    } else {\n      context.handleUserLogout();\n      context.handleUserRemoveProfile();\n      history.replace(\"/\");\n    }\n  }, [context.authObj.userProfile, context]);\n\n  return <div></div>;\n};\n\nexport default AuthCheck;\n"]},"metadata":{},"sourceType":"module"}